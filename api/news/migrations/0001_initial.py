# Generated by Django 2.2.3 on 2019-09-17 00:11

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('url', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=100)),
                ('content', models.TextField(default='')),
                ('date', models.DateTimeField(default=datetime.datetime(2019, 9, 17, 0, 11, 24, 177511))),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=20)),
                ('url', models.IntegerField(blank=True)),
                ('following_themes', models.ManyToManyField(blank=True, related_name='_theme_following_themes_+', to='news.Theme')),
            ],
        ),
        migrations.CreateModel(
            name='Main',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Latest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news.Article')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='themes',
            field=models.ManyToManyField(blank=True, related_name='theme_articles', to='news.Theme'),
        ),
    ]
